name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    paths:
      - 'demo/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: intelliguard-ai

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service:
          - name: ml-threat-detector
            context: ./demo/ml-service
            image: ai-soc-ml-detector
          - name: threat-hunter
            context: ./demo/threat-hunting
            image: ai-soc-threat-hunter
          - name: soar-automation
            context: ./demo/soar-automation
            image: ai-soc-soar
          - name: data-generator
            context: ./demo/data-generator
            image: ai-soc-data-generator

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service.image }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.build-and-push.outputs.digest }}

  summary:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Create deployment summary
        run: |
          echo "## ðŸš€ AI-SOC Images Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The following images have been built and pushed:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Service | Image |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| ML Detector | \`ghcr.io/${{ github.repository_owner }}/intelliguard-ai/ai-soc-ml-detector:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Threat Hunter | \`ghcr.io/${{ github.repository_owner }}/intelliguard-ai/ai-soc-threat-hunter:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "| SOAR Engine | \`ghcr.io/${{ github.repository_owner }}/intelliguard-ai/ai-soc-soar:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Data Generator | \`ghcr.io/${{ github.repository_owner }}/intelliguard-ai/ai-soc-data-generator:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¦ Pull Commands" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/${{ github.repository_owner }}/intelliguard-ai/ai-soc-ml-detector:latest" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/${{ github.repository_owner }}/intelliguard-ai/ai-soc-threat-hunter:latest" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/${{ github.repository_owner }}/intelliguard-ai/ai-soc-soar:latest" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ghcr.io/${{ github.repository_owner }}/intelliguard-ai/ai-soc-data-generator:latest" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
